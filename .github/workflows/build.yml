name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Install dependencies
      run: go mod download
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Run linter
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest

  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - goos: linux
          goarch: amd64
        - goos: linux
          goarch: arm64
        - goos: linux
          goarch: arm
          goarm: 7
        - goos: windows
          goarch: amd64
        - goos: windows
          goarch: 386
        - goos: darwin
          goarch: amd64
        - goos: darwin
          goarch: arm64
        - goos: freebsd
          goarch: amd64
        - goos: openbsd
          goarch: amd64
        - goos: netbsd
          goarch: amd64
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        GOARM: ${{ matrix.goarm }}
      run: |
        VERSION=$(git describe --tags --always --dirty)
        BUILD_TIME=$(date -u '+%Y-%m-%d_%H:%M:%S')
        GIT_COMMIT=$(git rev-parse --short HEAD)
        
        OUTPUT_NAME=nexus-util
        if [ "${{ matrix.goos }}" = "windows" ]; then
          OUTPUT_NAME=nexus-util.exe
        fi
        
        go build -ldflags "-X main.version=$VERSION -X main.build=$GIT_COMMIT" \
          -o $OUTPUT_NAME .
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: nexus-util-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goarm }}
        path: nexus-util*

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    
    - name: Create release packages
      run: |
        mkdir -p release
        for artifact in nexus-util-*; do
          if [ -d "$artifact" ]; then
            OS_ARCH=$(echo $artifact | sed 's/nexus-util-//')
            PACKAGE_NAME=nexus-util-${GITHUB_REF_NAME}-$OS_ARCH
            mkdir -p release/$PACKAGE_NAME
            cp $artifact/nexus-util* release/$PACKAGE_NAME/
            cp README.md release/$PACKAGE_NAME/
            cd release
            tar -czf $PACKAGE_NAME.tar.gz $PACKAGE_NAME/
            cd ..
            rm -rf release/$PACKAGE_NAME
          fi
        done
    
    - name: Create checksums
      run: |
        cd release
        sha256sum *.tar.gz > checksums.txt
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release/*.tar.gz
          release/checksums.txt
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}